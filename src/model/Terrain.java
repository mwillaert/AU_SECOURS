package model;

import resources.Resources;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.LinkedList;
import java.util.List;

public class Terrain {
	public static Point[] listPointsSave = new Point[]{new Point(29*32,8*32)};

	public static int[][] terrain1 = new int[][]   {{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,10, 0, 0, 0, 0,13,14,14,14,14,14},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11, 0, 0, 0, 0, 0, 9,11,11,11,11,11},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 2, 2, 2, 2, 1, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11, 0, 0, 0, 0, 0, 0, 9,11,11,11,11,11},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,11,11},
													{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,11,11},
													{ 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,11,11,11,11,11},
													{ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 5, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 2, 2, 3,13,14,14,14,14,14,14,14,14,11,11,11,11,11,11},
													{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 4, 5, 5, 5, 3, 9,11,11,11,11,11,11,11,11,11,11,11,11,11},
													{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 3, 9,11,11,11,11,11,11,11,11,11,11,11,11},
													{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 3, 9,11,11,11,11,11,11,11,11,11,11,11},
													{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 3, 9,11,11,11,11,11,11,11,11,11,11,11},
													{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 3, 9,11,11,11,11,11,11,11,11,11,11,11},
													{ 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 6, 0, 0, 0, 0, 0, 4, 5, 5, 5, 5, 5, 3, 9,11,11,11,11,11,11,11,11,11,11,11}};
	public static BufferedImage imageTerrain;
	
	public static void genereImageTerrain() {
		imageTerrain = new BufferedImage(terrain1[0].length*Settings.SIZE_CASE, terrain1[0].length*Settings.SIZE_CASE, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2d = (Graphics2D)imageTerrain.getGraphics();
		for (int y=0;y<Terrain.terrain1.length;y++) {
			for (int x=0;x<Terrain.terrain1[0].length;x++) {
				if (Terrain.terrain1[y][x]!=0) {
					g2d.setColor(Color.black);
					g2d.fillRect(x*Settings.SIZE_CASE + GameCamera.x, y*Settings.SIZE_CASE, Settings.SIZE_CASE, Settings.SIZE_CASE);
					//g2d.drawImage(Resources.blocs[Terrain.terrain1[y][x]-1],x*Settings.SIZE_CASE + GameCamera.x, y*Settings.SIZE_CASE,null);
				}
			}
		}
	}
}
